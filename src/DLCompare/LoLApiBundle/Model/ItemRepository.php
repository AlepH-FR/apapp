<?php

namespace DLCompare\LoLApiBundle\Model;

use Doctrine\ORM\EntityRepository;

use DLCompare\LoLApiBundle\Entity\Champion;
use DLCompare\LoLApiBundle\Entity\Item;

/**
 * ItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemRepository extends EntityRepository
{
	public function getMainItems(Champion $champion, $maxResults = 10)
	{
		$qb = $this->createQueryBuilder('i');
		$ex = $qb->expr();

		return $qb
			->addSelect('COUNT(i) AS HIDDEN usage')
			->leftJoin('i.participants', 'p')
			->leftJoin('p.champion', 'c')
			->leftJoin('p.game', 'g')
			->where($ex->eq('c.id', $champion->getId()))
			->andWhere($ex->notLike('i.tags', $ex->literal('%Trinket%')))
			->andWhere($ex->notLike('i.name', $ex->literal('Enchantment%')))
			->andWhere($ex->gt('g.duration', 35 * 60))
            ->groupBy('i.id')
            ->orderBy('usage', 'DESC')
			->setMaxResults($maxResults)
			->getQuery()
			->execute()
		;		
	}

	public function getUsage(Champion $champion, $version, Item $item)
	{
		$qb = $this->createQueryBuilder('i');
		$ex = $qb->expr();

		return $qb
			->select('COUNT(i)')
			->leftJoin('i.participants', 'p')
			->leftJoin('p.champion', 'c')
			->leftJoin('p.game', 'g')
			->where($ex->like('g.version', $ex->literal($version . '%')))
			->andWhere($ex->eq('c.id', $champion->getId()))
			->andWhere($ex->eq('i.id', $item->getId()))
            ->getQuery()
            ->getSingleScalarResult()
		;				
	}
}
